services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: inventory-postgres-test
    environment:
      POSTGRES_DB: inventorydb_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - inventory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Inventory API
  inventory-api:
    build:
      context: .
      dockerfile: src/Inventory.API/Dockerfile
    container_name: inventory-api-test
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=inventorydb_test;Username=postgres;Password=${POSTGRES_PASSWORD:-postgres}
      - Jwt__Key=${JWT_KEY:-ThisIsAVeryLongSecretKeyThatIsAtLeast32CharactersLongForJWT}
      - Jwt__Issuer=${JWT_ISSUER:-InventoryServer}
      - Jwt__Audience=${JWT_AUDIENCE:-InventoryClient}
      - Jwt__ExpireMinutes=${JWT_EXPIRE_MINUTES:-15}
      - Jwt__RefreshTokenExpireDays=${JWT_REFRESH_EXPIRE_DAYS:-7}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Inventory Web Client (Blazor WebAssembly)
  inventory-web:
    build:
      context: .
      dockerfile: src/Inventory.Web.Client/Dockerfile
    container_name: inventory-web-test
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - DOTNET_RUNNING_IN_CONTAINER=true
    depends_on:
      inventory-api:
        condition: service_healthy
    networks:
      - inventory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: inventory-nginx-test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - inventory-api
      - inventory-web
    networks:
      - inventory-network
    restart: unless-stopped
    environment:
      - DOMAIN=test.warehouse.cuby
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data_test:
    driver: local

networks:
  inventory-network:
    driver: bridge
