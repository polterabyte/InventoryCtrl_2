events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

    # Upstream servers
    upstream inventory_api {
        server inventory-api-staging:80;
    }

    upstream inventory_web {
        server inventory-web-staging:80;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name warehouse.cuby staging.warehouse.cuby test.warehouse.cuby;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Localhost HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name localhost 127.0.0.1;
        
        # Redirect localhost HTTP requests to HTTPS
        return 301 https://localhost$request_uri;
    }

    # IP address HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name 192.168.139.96;
        
        # Redirect IP HTTP requests to HTTPS
        return 301 https://192.168.139.96$request_uri;
    }

    # Production HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name warehouse.cuby;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/warehouse.cuby.crt;
        ssl_certificate_key /etc/nginx/ssl/warehouse.cuby.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self';" always;

        # Include common location blocks
        include /etc/nginx/conf.d/locations.conf;
    }

    # Staging HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name staging.warehouse.cuby;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/staging.warehouse.cuby.crt;
        ssl_certificate_key /etc/nginx/ssl/staging.warehouse.cuby.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include common location blocks
        include /etc/nginx/conf.d/locations.conf;
    }

    # Localhost HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name localhost 127.0.0.1;

        # SSL configuration (use IP certificate)
        ssl_certificate /etc/nginx/ssl/192.168.139.96.crt;
        ssl_certificate_key /etc/nginx/ssl/192.168.139.96.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include common location blocks
        include /etc/nginx/conf.d/locations.conf;
    }

    # IP address HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name 192.168.139.96;

        # SSL configuration (use IP certificate)
        ssl_certificate /etc/nginx/ssl/192.168.139.96.crt;
        ssl_certificate_key /etc/nginx/ssl/192.168.139.96.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include common location blocks
        include /etc/nginx/conf.d/locations.conf;
    }

    # Test HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name test.warehouse.cuby;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/test.warehouse.cuby.crt;
        ssl_certificate_key /etc/nginx/ssl/test.warehouse.cuby.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include common location blocks
        include /etc/nginx/conf.d/locations.conf;
    }
}