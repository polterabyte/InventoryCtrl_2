services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - inventory-network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5

  # Inventory API
  inventory-api:
    build:
      context: .
      dockerfile: src/Inventory.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=inventorydb;Username=postgres;Password=postgres
      - Jwt__Key=ThisIsAVeryLongSecretKeyThatIsAtLeast32CharactersLongForJWT
      - Jwt__Issuer=InventoryServer
      - Jwt__Audience=InventoryClient
      - Jwt__ExpireMinutes=15
      - Jwt__RefreshTokenExpireDays=7
      - ADMIN_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Inventory Web Client (Blazor WebAssembly)
  inventory-web:
    build:
      context: .
      dockerfile: src/Inventory.Web.Client/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
    depends_on:
      inventory-api:
        condition: service_healthy
    networks:
      - inventory-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx-simple.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - inventory-api
      - inventory-web
    networks:
      - inventory-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  inventory-network:
    driver: bridge