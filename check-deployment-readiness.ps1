# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é warehouse.cuby
param(
    [string]$Environment = "production"
)

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é warehouse.cuby..." -ForegroundColor Green
Write-Host "–û–∫—Ä—É–∂–µ–Ω–∏–µ: $Environment" -ForegroundColor Yellow
Write-Host ""

$allChecksPassed = $true

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Cyan
try {
    $dockerVersion = docker --version
    if ($dockerVersion) {
        Write-Host "   ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        $allChecksPassed = $false
    }
} catch {
    Write-Host "   ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    $allChecksPassed = $false
}

try {
    $composeVersion = docker-compose --version
    if ($composeVersion) {
        Write-Host "   ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $composeVersion" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        $allChecksPassed = $false
    }
} catch {
    Write-Host "   ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    $allChecksPassed = $false
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Write-Host "`n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Cyan

$requiredFiles = @(
    "docker-compose.yml",
    "docker-compose.prod.yml",
    "nginx/nginx.conf",
    "nginx/conf.d/locations.conf"
)

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "   ‚úÖ $file –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        $allChecksPassed = $false
    }
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "`n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Cyan

$envFile = "env.$Environment"
if (Test-Path $envFile) {
    Write-Host "   ‚úÖ $envFile –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    $envContent = Get-Content $envFile
    $requiredVars = @("POSTGRES_PASSWORD", "JWT_KEY", "DOMAIN")
    
    foreach ($var in $requiredVars) {
        if ($envContent -match "^$var=") {
            Write-Host "   ‚úÖ $var –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå $var –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Red
            $allChecksPassed = $false
        }
    }
} else {
    Write-Host "   ‚ùå $envFile –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    $allChecksPassed = $false
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
Write-Host "`n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..." -ForegroundColor Cyan

$sslDir = "nginx/ssl"
if (Test-Path $sslDir) {
    Write-Host "   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è SSL –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Green
    
    $domains = @("warehouse.cuby", "staging.warehouse.cuby", "test.warehouse.cuby")
    foreach ($domain in $domains) {
        $certFile = "$sslDir/$domain.crt"
        $keyFile = "$sslDir/$domain.key"
        
        if ((Test-Path $certFile) -and (Test-Path $keyFile)) {
            Write-Host "   ‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
        }
    }
} else {
    Write-Host "   ‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è SSL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Yellow
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
Write-Host "`n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Cyan

$ports = @(80, 443)
foreach ($port in $ports) {
    try {
        $connection = Test-NetConnection -ComputerName "localhost" -Port $port -WarningAction SilentlyContinue
        if ($connection.TcpTestSucceeded) {
            Write-Host "   ‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå –ü–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç" -ForegroundColor Red
            $allChecksPassed = $false
        }
    } catch {
        Write-Host "   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç $port" -ForegroundColor Yellow
    }
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
Write-Host "`n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS..." -ForegroundColor Cyan

$domains = @("warehouse.cuby", "staging.warehouse.cuby", "test.warehouse.cuby")
foreach ($domain in $domains) {
    try {
        $dnsResult = Resolve-DnsName -Name $domain -ErrorAction SilentlyContinue
        if ($dnsResult) {
            Write-Host "   ‚úÖ $domain —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö†Ô∏è  $domain –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å DNS –¥–ª—è $domain" -ForegroundColor Yellow
    }
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
Write-Host "`n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Cyan

try {
    $images = docker images --format "table {{.Repository}}:{{.Tag}}"
    if ($images -match "inventory") {
        Write-Host "   ‚úÖ Docker –æ–±—Ä–∞–∑—ã –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  Docker –æ–±—Ä–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–±—É–¥—É—Ç —Å–æ–±—Ä–∞–Ω—ã –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å Docker –æ–±—Ä–∞–∑—ã" -ForegroundColor Yellow
}

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "`n" + "="*50 -ForegroundColor Gray
if ($allChecksPassed) {
    Write-Host "üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!" -ForegroundColor Green
    Write-Host "–ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: .\deploy-$Environment.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå –°–∏—Å—Ç–µ–º–∞ –ù–ï –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é" -ForegroundColor Red
    Write-Host "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞" -ForegroundColor Yellow
}
Write-Host "="*50 -ForegroundColor Gray

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
Write-Host "`nüìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Yellow
Write-Host "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ (4GB+ RAM)" -ForegroundColor White
Write-Host "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443" -ForegroundColor White
Write-Host "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor White
Write-Host "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–ª–µ—Ä—Ç—ã" -ForegroundColor White
Write-Host "5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ staging –æ–∫—Ä—É–∂–µ–Ω–∏–∏" -ForegroundColor White
