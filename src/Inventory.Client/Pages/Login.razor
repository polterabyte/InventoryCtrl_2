@page "/login"
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<LoginForm OnLoginSuccess="HandleLoginSuccess" OnLoginError="HandleLoginError" />

@code {
    private async Task HandleLoginSuccess(AuthResult result)
    {
        // Сохраняем токен через CustomAuthenticationStateProvider
        var customAuthProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthProvider.MarkUserAsAuthenticatedAsync(result.Token);
        
        // Переходим на главную страницу
        Navigation.NavigateTo("/");
    }

    private Task HandleLoginError(string errorMessage)
    {
        // Error is already displayed in the form component
        return Task.CompletedTask;
    }
}
