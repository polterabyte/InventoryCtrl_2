@page "/products/add"
@attribute [Authorize]
@using Inventory.Shared.DTOs
@using Inventory.Shared.Interfaces
@using Inventory.Shared.Services
@using Radzen
@using Radzen.Blazor
@inject IProductService ProductService
@inject NotificationService NotificationService
@inject IErrorHandlingService ErrorHandlingService
@inject NavigationManager Navigation

<PageTitle>Добавить товар</PageTitle>

<RadzenStack Orientation="Orientation.Vertical" Gap="1rem" class="container-fluid">
    <!-- Header with title and back button -->
    <RadzenStack Orientation="Orientation.Horizontal"
                 AlignItems="AlignItems.Center"
                 JustifyContent="JustifyContent.SpaceBetween">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
            <RadzenIcon Icon="add_circle" Style="font-size: 1.5rem; color: var(--rz-primary);" />
            <RadzenText TextStyle="TextStyle.H4">Добавить новый товар</RadzenText>
        </RadzenStack>
        <RadzenButton Text="Назад к списку"
                      Icon="arrow_back"
                      ButtonStyle="ButtonStyle.Light"
                      Variant="Variant.Outlined"
                      Click="GoBack" />
    </RadzenStack>

    <!-- Product form -->
    <RadzenRow JustifyContent="JustifyContent.Center">
        <RadzenColumn Size="12" SizeLg="8" SizeXl="6">
            <RadzenCard>
                <ProductForm Title="Новый товар"
                            OnSave="HandleProductSaved"
                            OnCancel="GoBack" />
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

@code {
    private async Task HandleProductSaved(ProductDto product)
    {
        try
        {
            NotificationService.Notify(new Radzen.NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Успех",
                Detail = $"Товар '{product.Name}' успешно добавлен",
                Duration = 4000
            });
            Navigation.NavigateTo("/products");
        }
        catch (Exception ex)
        {
            await ErrorHandlingService.HandleErrorAsync(ex, "Saving product");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/products");
    }
}
