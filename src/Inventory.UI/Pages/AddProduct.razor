@page "/products/add"
@attribute [Authorize]
@using Inventory.Shared.DTOs
@using Inventory.Shared.Interfaces
@using Inventory.Shared.Services
@inject IProductService ProductService
@inject IUINotificationService NotificationService
@inject IErrorHandlingService ErrorHandlingService
@inject NavigationManager Navigation

<PageTitle>Добавить товар</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="bi bi-plus-circle me-2"></i>Добавить новый товар</h2>
                <button class="btn btn-outline-secondary" @onclick="GoBack">
                    <i class="bi bi-arrow-left"></i> Назад к списку
                </button>
            </div>

            <div class="row justify-content-center">
                <div class="col-lg-8 col-xl-6">
                    <div class="card">
                        <div class="card-body">
                            <ProductForm Title="Новый товар"
                                        OnSave="HandleProductSaved"
                                        OnCancel="GoBack" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private async Task HandleProductSaved(ProductDto product)
    {
        try
        {
            NotificationService.ShowSuccess("Успех", $"Товар '{product.Name}' успешно добавлен");
            Navigation.NavigateTo("/products");
        }
        catch (Exception ex)
        {
            await ErrorHandlingService.HandleErrorAsync(ex, "Saving product");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/products");
    }
}
